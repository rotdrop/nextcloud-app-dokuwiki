{"version":3,"file":"js/chunks/src_DokuWikiWrapper_vue-6099b62788c1d330460b.js","mappings":"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","sources":["webpack://@rotdrop/nextcloud-app-dokuwiki/./src/DokuWikiWrapper.vue","webpack://@rotdrop/nextcloud-app-dokuwiki/./src/toolkit/util/dialog-alert.ts","webpack://@rotdrop/nextcloud-app-dokuwiki/./src/doku-wiki.ts","webpack://@rotdrop/nextcloud-app-dokuwiki/./src/toolkit/util/initial-state.ts","webpack://@rotdrop/nextcloud-app-dokuwiki/./src/DokuWikiWrapper.vue?cf1c","webpack://@rotdrop/nextcloud-app-dokuwiki/./src/DokuWikiWrapper.vue?def3","webpack://@rotdrop/nextcloud-app-dokuwiki/DokuWikiWrapper.vue","webpack://@rotdrop/nextcloud-app-dokuwiki/./src/DokuWikiWrapper.vue?5b97"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{ref:\"container\",class:_setup.appName + '-container'},[_c('div',{ref:\"loaderContainer\",staticClass:\"loader-container\"}),_vm._v(\" \"),_c('div',{ref:\"frameWrapper\",class:_setup.appName + '-frame-wrapper'},[_c('iframe',_vm._b({ref:\"externalFrame\",attrs:{\"id\":_setup.frameId,\"src\":_setup.iFrameLocation,\"name\":_setup.appName},on:{\"load\":_setup.loadHandler}},'iframe',_setup.props.iFrameAttributes,false))])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\n * @copyright Copyright (c) 2025 Claus-Justus Heine <himself@claus-justus-heine.de>\n * @author Claus-Justus Heine <himself@claus-justus-heine.de>\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {\n  getDialogBuilder,\n  DialogSeverity,\n} from '@nextcloud/dialogs';\nimport { translate as t } from '@nextcloud/l10n';\n\nexport interface DialogAlertArgs {\n  title: string,\n  text: string,\n}\n\nconst dialogAlert = async ({ title, text }: DialogAlertArgs) => {\n  await getDialogBuilder(title)\n    .setText(text)\n    .setSeverity(DialogSeverity.Info)\n    .addButton({\n      label: t('core', 'Yes'),\n      type: 'primary',\n      callback() {},\n    })\n    .build()\n    .show();\n};\n\nexport default dialogAlert;\n","/**\n * DokuWiki -- Embed DokuWiki into NextCloud with SSO.\n *\n * @author Claus-Justus Heine <himself@claus-justus-heine.de>\n * @copyright 2020, 2021, 2023, 2025 Claus-Justus Heine\n * @license AGPL-3.0-or-later\n *\n * DokuWikiEmbedded is free software: you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * DokuWikiEmbedded is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with DokuWikiEmbedded. If not, see\n * <http://www.gnu.org/licenses/>.\n */\n\nimport { appName } from './config.ts';\nimport { translate as t } from '@nextcloud/l10n';\nimport dialogAlert from './toolkit/util/dialog-alert.ts';\n\nexport const removeEnvelope = (frame?: HTMLIFrameElement) => {\n  const frameDocument = frame?.contentWindow?.document;\n\n  if (!frameDocument) {\n    return;\n  }\n  frameDocument.querySelectorAll('#dokuwiki__header div.pad').forEach(el => el.remove());\n  frameDocument.querySelectorAll<HTMLElement>('#dokuwiki_header').forEach(el => { el.style.padding = '2.5em 0px 0px'; });\n  frameDocument.querySelectorAll('#dokuwiki__footer').forEach(el => el.remove());\n};\n\nexport const tuneContents = (frame?: HTMLIFrameElement) => {\n\n  const frameDocument = frame?.contentWindow?.document;\n\n  if (!frameDocument) {\n    return;\n  }\n\n  frameDocument.querySelectorAll('.logout').forEach(el => el.remove());\n  frameDocument.querySelectorAll('li:empty').forEach(el => el.remove());\n  frameDocument.querySelectorAll('form.btn_logout').forEach(el => el.remove());\n  frameDocument.querySelectorAll(':scope #dokuwiki__usertools li.user').forEach(el => el.remove());\n  frameDocument.querySelectorAll(':scope #dokuwiki__usertools li.action.profile').forEach(el => el.remove());\n\n  frameDocument.querySelectorAll('a').forEach(el => {\n    if (el.hostname && el.hostname !== window.location.hostname) {\n      el.setAttribute('target', '_blank');\n    }\n  });\n\n  const previewDiv = frameDocument.querySelector('div.preview');\n  if (previewDiv) {\n    // make sure that links in the preview pane are NOT followed.\n    previewDiv.querySelectorAll('a[class^=\"wikilink\"]').forEach((el) => {\n      el.addEventListener('click', function(event) {\n        if (!event.target) {\n          return;\n        }\n        event.stopPropagation();\n        event.preventDefault();\n        const target = event.target as HTMLAnchorElement;\n        const href = target.getAttribute('href')!.replace(/^\\/[^?]+\\?id=(.*)$/, '$1');\n        dialogAlert({\n          title: t(appName, 'Link to wiki page \"{href}\"', { href }),\n          text: t(appName, 'Links to wiki pages are disabled in preview mode.'),\n        });\n      }, true);\n    });\n    previewDiv.querySelectorAll('a[class^=\"media\"]').forEach(el => {\n      el.addEventListener('click', function(event) {\n        if (!event.target) {\n          return;\n        }\n        event.stopPropagation();\n        event.preventDefault();\n        const target = event.target as HTMLAnchorElement;\n        const href = target.getAttribute('href')!.replace(/^\\/[^?]+\\?id=(.*)$/, '$1');\n        dialogAlert({\n          title: t(appName, 'Link to wiki page \"{href}\"', { href }),\n          text: t(appName, 'Links to media files are disabled in preview mode.'),\n        });\n      }, true);\n    });\n  }\n};\n","/**\n * @copyright Copyright (c) 2022, 2023, 2025 Claus-Justus Heine <himself@claus-justus-heine.de>\n *\n * @author Claus-Justus Heine <himself@claus-justus-heine.de>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { appName } from '../../config.ts';\n\nimport { loadState } from '@nextcloud/initial-state';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport interface GetInitialStateArgs<D = Record<string, any> > {\n  section: string,\n  defaults?: D|null,\n}\n\n/**\n * @param args Destructuring arguments\n *\n * @param args.section The desired sub-section of initial state data.\n *\n * @param args.defaults If an object return this if the initial state\n * cannot be loaded. If undefined or null return null. If undefined\n * report an error to the browser console if the state could not be\n *  found.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst getInitialState = <D = Record<string, any> >({ section, defaults }: GetInitialStateArgs<D> = { section: 'config' }) => {\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const result = loadState(appName, section) as D;\n    return result;\n  } catch (err) {\n    if (defaults || defaults === null) {\n      return defaults;\n    }\n    console.error('error in loadState(\"' + section + '\"): ', err);\n    return null;\n  }\n};\n\nexport default getInitialState;\n","import { defineComponent as _defineComponent } from 'vue'\nimport { appName } from './config.ts'\nimport { translate as t } from '@nextcloud/l10n'\nimport {\n  computed,\n  onMounted,\n  onBeforeMount,\n  onBeforeUnmount,\n  ref,\n  watch,\n} from 'vue'\nimport {\n  tuneContents,\n  removeEnvelope,\n} from './doku-wiki.ts'\nimport getInitialState from './toolkit/util/initial-state.ts'\nimport Console from './toolkit/util/console.ts'\nimport type { InitialState } from './types/initial-state.d.ts'\n\ninterface IFrameLoadedEventData {\n  wikiPath: string[],\n  urlPath: string,\n  query: Record<string, string>,\n  iFrame: HTMLIFrameElement,\n  window: Window,\n  document: Document,\n}\n\ninterface ErrorEventData {\n  error: Error,\n  hint: string,\n}\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'DokuWikiWrapper',\n  props: {\n    fullScreen: { type: Boolean, default: true },\n    iFrameAttributes: { default: () => ({}) },\n    query: { default: () => ({}) },\n    wikiPage: { default: '' }\n  },\n  emits: [\"iframe-loaded\", \"iframe-resize\", \"update-loading\", \"error\"],\n  setup(__props: any, { expose, emit }: { emit: ({\n  (event: 'iframe-loaded', eventData: IFrameLoadedEventData): void,\n  (event: 'iframe-resize', eventData: ResizeObserverEntry): void,\n  (event: 'update-loading', loading: boolean): void,\n  (event: 'error', eventData: ErrorEventData): void,\n}), expose: any, slots: any, attrs: any }) {\n\nconst props = __props as { fullScreen: boolean, iFrameAttributes: Record<string, string>, query: Record<string, string>, wikiPage: string };\n\nconst wrappedApp = 'DokuWiki'\n\nconst logger = new Console(wrappedApp + 'Wrapper')\n\n\n\n\n\nconst initialState = getInitialState<InitialState>()\n\nconst loading = ref(true)\n\nwatch(loading, (value) => emit('update-loading', value))\n\nconst requestedLocation = computed(() => {\n  const queryString = (new URLSearchParams({ id: props.wikiPage, ...props.query })).toString().replace('%3A', ':')\n  return initialState?.wikiURL + '/doku.php?' + queryString\n})\n/**\n * Value of src attribute of iframe.\n */\nconst iFrameLocation = ref(requestedLocation.value)\n/**\n * Actual location which in general is different from the src attribute.\n */\nconst currentLocation = ref(requestedLocation.value)\n\nconst frameId = computed(() => appName + '-frame')\n\nwatch(() => props.wikiPage, () => {\n  if (requestedLocation.value !== currentLocation.value) {\n    logger.debug('TRIGGER IFRAME REFRESH', { request: requestedLocation.value, current: currentLocation.value })\n    loading.value = true\n    iFrameLocation.value = requestedLocation.value\n  } else {\n    logger.debug('NOT CHANGING IFRAME SOURCE', { request: requestedLocation.value, current: currentLocation.value })\n  }\n})\n\nconst loadTimeout = 1000 // 1 second\n\nlet timerCount = 0\n\nlet loadTimer: undefined|ReturnType<typeof setTimeout>\n\nconst container = ref<null|HTMLDivElement>(null)\nconst loaderContainer = ref<null|HTMLDivElement>(null)\nconst frameWrapper = ref<null|HTMLDivElement>(null)\nconst externalFrame = ref<null|HTMLIFrameElement>(null)\nlet iFrameBody: undefined|HTMLBodyElement\n\nconst setIFrameSize = ({ width, height }: DOMRectReadOnly) => {\n  if (!externalFrame.value) {\n    return\n  }\n  const iFrame = externalFrame.value\n  iFrame.style.width = width + 'px'\n  iFrame.style.height = height + 'px'\n}\n\nconst resizeObserver = new ResizeObserver((entries) => {\n  for (const entry of entries) {\n    if (entry.target === iFrameBody) {\n      emit('iframe-resize', entry)\n      continue\n    }\n    if (props.fullScreen && entry.target === container.value) {\n      setIFrameSize(entry.contentRect)\n    }\n  }\n})\n\nconst emitError = (error: unknown) => {\n  loaderContainer.value!.classList.toggle('fading', true)\n  emit('error', {\n    error: error instanceof Error ? error : new Error('Non-error error', { cause: error }),\n    hint: t(\n      appName,\n      `Unable to access the contents of the wrapped {wrappedApp} instance.\nThis may be caused by cross-domain access restrictions.\nPlease check that your Nextcloud instance ({nextcloudUrl}) and the wrapped {wrappedApp} instance ({iFrameUrl}) are served from the same domain.`,\n      {\n        wrappedApp,\n        nextcloudUrl: window.location.protocol + '//' + window.location.host,\n        iFrameUrl: initialState?.wikiURL || '',\n      },\n    ),\n  })\n}\n\nconst loadHandler = () => {\n  logger.debug('GOT LOAD EVENT')\n  const iFrame = externalFrame.value\n  const iFrameWindow = iFrame?.contentWindow\n  if (!iFrame || !iFrameWindow) {\n    return\n  }\n  loading.value = true // if not already set ...\n  let iFrameDocument: Document|null\n  try {\n    iFrameDocument = iFrame.contentDocument\n    tuneContents(iFrame)\n  } catch (error: unknown) {\n    logger.error('UNABLE TO ACCESS IFRAME CONTENTS', { error })\n    emitError(error)\n    return\n  }\n  if (!props.fullScreen) {\n    removeEnvelope(iFrame)\n  } else {\n    setIFrameSize(container.value!.getBoundingClientRect())\n  }\n  iFrameBody = iFrameDocument?.body as undefined|HTMLBodyElement\n  logger.debug('IFRAME BODY', { iFrameBody })\n  if (iFrameBody) {\n    resizeObserver.observe(iFrameBody)\n  }\n  loaderContainer.value!.classList.toggle('fading', true)\n  logger.debug('IFRAME IS NOW', {\n    iFrame,\n    location: iFrameWindow.location,\n  })\n  currentLocation.value = iFrameWindow.location.href\n  const search = iFrameWindow.location.search\n  const urlPath = iFrameWindow.location.pathname.replace(/^.*doku\\.php\\/?/, '')\n  const query = Object.fromEntries((new URLSearchParams(search)).entries())\n  const wikiPath: string[] = []\n  if (query.id) {\n    wikiPath.splice(0, 0, ...(query.id.split(/:/)))\n  } else {\n    wikiPath.splice(0, 0, ...(urlPath.split(/[:/]/)))\n  }\n  // no rewrite: doku.php?id=A:B:C\n  // rewrite: doku.php/A:B:C\n  // rewrite + useslash: doku.php/A/B/C\n  //\n  // In all cases the id=A:B:C is understood.\n  emit('iframe-loaded', {\n    wikiPath,\n    urlPath,\n    query,\n    iFrame,\n    window: iFrameWindow,\n    document: iFrameDocument!,\n  })\n  loading.value = false\n}\n\nconst loadTimerHandler = () => {\n  loadTimer = undefined\n  if (!loading.value) {\n    return\n  }\n  timerCount++\n  try {\n    const iFrameContents = externalFrame.value!.contentWindow!.document\n    if (iFrameContents.querySelector('#layout')) {\n      logger.debug('LOAD EVENT FROM TIMER AFTER ' + (loadTimeout * timerCount) + ' ms')\n      externalFrame.value!.dispatchEvent(new Event('load'))\n    } else {\n      loadTimer = setTimeout(loadTimerHandler, loadTimeout)\n    }\n  } catch (error: unknown) {\n    logger.error('UNABLE TO ACCESS IFRAME CONTENTS', { error })\n    emitError(error)\n  }\n}\n\nonBeforeMount(() => {\n  loading.value = true\n  iFrameLocation.value = requestedLocation.value\n})\n\nwatch(() => props.fullScreen, (value) => {\n  if (!value) {\n    removeEnvelope(externalFrame.value || undefined)\n  } else {\n    // if this mutation really happens we trigger an iframe reload by\n    // touching its src attribute\n    const iFrame = externalFrame.value\n    if (iFrame) {\n      if (iFrameLocation.value !== requestedLocation.value) {\n        iFrameLocation.value = requestedLocation.value\n      } else if (iFrame.contentWindow) {\n        iFrame.contentWindow.location.href = requestedLocation.value\n      }\n    }\n  }\n})\n\nonMounted(() => {\n  if (!loadTimer) {\n    loadTimer = setTimeout(loadTimerHandler, loadTimeout)\n  }\n  resizeObserver.observe(container.value!)\n})\n\nonBeforeUnmount(() => {\n  resizeObserver.disconnect()\n})\n\nexpose({\n  currentLocation,\n  wikiIFrame: externalFrame,\n})\n\n\nreturn { __sfc: true,wrappedApp, logger, props, emit, initialState, loading, requestedLocation, iFrameLocation, currentLocation, frameId, loadTimeout, timerCount, loadTimer, container, loaderContainer, frameWrapper, externalFrame, iFrameBody, setIFrameSize, resizeObserver, emitError, loadHandler, loadTimerHandler, appName }\n}\n\n})","import mod from \"-!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??clonedRuleSet-6.use[1]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./DokuWikiWrapper.vue?vue&type=script&setup=true&lang=ts\"; export default mod; export * from \"-!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??clonedRuleSet-6.use[1]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./DokuWikiWrapper.vue?vue&type=script&setup=true&lang=ts\"","<!--\n - @copyright Copyright (c) 2022-2025 Claus-Justus Heine <himself@claus-justus-heine.de>\n - @author Claus-Justus Heine <himself@claus-justus-heine.de>\n - @license AGPL-3.0-or-later\n -\n - This program is free software: you can redistribute it and/or modify\n - it under the terms of the GNU Affero General Public License as\n - published by the Free Software Foundation, either version 3 of the\n - License, or (at your option) any later version.\n -\n - This program is distributed in the hope that it will be useful,\n - but WITHOUT ANY WARRANTY; without even the implied warranty of\n - MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n - GNU Affero General Public License for more details.\n -\n - You should have received a copy of the GNU Affero General Public License\n - along with this program. If not, see <http://www.gnu.org/licenses/>.\n -->\n<template>\n  <div ref=\"container\"\n       :class=\"appName + '-container'\"\n  >\n    <div ref=\"loaderContainer\"\n         class=\"loader-container\"\n    />\n    <div ref=\"frameWrapper\"\n         :class=\"appName + '-frame-wrapper'\"\n    >\n      <iframe :id=\"frameId\"\n              ref=\"externalFrame\"\n              :src=\"iFrameLocation\"\n              :name=\"appName\"\n              v-bind=\"props.iFrameAttributes\"\n              @load=\"loadHandler\"\n      />\n    </div>\n  </div>\n</template>\n<script setup lang=\"ts\">\nimport { appName } from './config.ts'\nimport { translate as t } from '@nextcloud/l10n'\nimport {\n  computed,\n  onMounted,\n  onBeforeMount,\n  onBeforeUnmount,\n  ref,\n  watch,\n} from 'vue'\nimport {\n  tuneContents,\n  removeEnvelope,\n} from './doku-wiki.ts'\nimport getInitialState from './toolkit/util/initial-state.ts'\nimport Console from './toolkit/util/console.ts'\nimport type { InitialState } from './types/initial-state.d.ts'\n\nconst wrappedApp = 'DokuWiki'\n\nconst logger = new Console(wrappedApp + 'Wrapper')\n\nconst props = withDefaults(defineProps<{\n  fullScreen?: boolean,\n  iFrameAttributes?: Record<string, string>,\n  query?: Record<string, string>,\n  wikiPage?: string,\n}>(), {\n  fullScreen: true,\n  iFrameAttributes: () => ({}),\n  query: () => ({}),\n  wikiPage: '',\n})\n\ninterface IFrameLoadedEventData {\n  wikiPath: string[],\n  urlPath: string,\n  query: Record<string, string>,\n  iFrame: HTMLIFrameElement,\n  window: Window,\n  document: Document,\n}\n\ninterface ErrorEventData {\n  error: Error,\n  hint: string,\n}\n\nconst emit = defineEmits<{\n  (event: 'iframe-loaded', eventData: IFrameLoadedEventData): void,\n  (event: 'iframe-resize', eventData: ResizeObserverEntry): void,\n  (event: 'update-loading', loading: boolean): void,\n  (event: 'error', eventData: ErrorEventData): void,\n}>()\n\nconst initialState = getInitialState<InitialState>()\n\nconst loading = ref(true)\n\nwatch(loading, (value) => emit('update-loading', value))\n\nconst requestedLocation = computed(() => {\n  const queryString = (new URLSearchParams({ id: props.wikiPage, ...props.query })).toString().replace('%3A', ':')\n  return initialState?.wikiURL + '/doku.php?' + queryString\n})\n/**\n * Value of src attribute of iframe.\n */\nconst iFrameLocation = ref(requestedLocation.value)\n/**\n * Actual location which in general is different from the src attribute.\n */\nconst currentLocation = ref(requestedLocation.value)\n\nconst frameId = computed(() => appName + '-frame')\n\nwatch(() => props.wikiPage, () => {\n  if (requestedLocation.value !== currentLocation.value) {\n    logger.debug('TRIGGER IFRAME REFRESH', { request: requestedLocation.value, current: currentLocation.value })\n    loading.value = true\n    iFrameLocation.value = requestedLocation.value\n  } else {\n    logger.debug('NOT CHANGING IFRAME SOURCE', { request: requestedLocation.value, current: currentLocation.value })\n  }\n})\n\nconst loadTimeout = 1000 // 1 second\n\nlet timerCount = 0\n\nlet loadTimer: undefined|ReturnType<typeof setTimeout>\n\nconst container = ref<null|HTMLDivElement>(null)\nconst loaderContainer = ref<null|HTMLDivElement>(null)\nconst frameWrapper = ref<null|HTMLDivElement>(null)\nconst externalFrame = ref<null|HTMLIFrameElement>(null)\nlet iFrameBody: undefined|HTMLBodyElement\n\nconst setIFrameSize = ({ width, height }: DOMRectReadOnly) => {\n  if (!externalFrame.value) {\n    return\n  }\n  const iFrame = externalFrame.value\n  iFrame.style.width = width + 'px'\n  iFrame.style.height = height + 'px'\n}\n\nconst resizeObserver = new ResizeObserver((entries) => {\n  for (const entry of entries) {\n    if (entry.target === iFrameBody) {\n      emit('iframe-resize', entry)\n      continue\n    }\n    if (props.fullScreen && entry.target === container.value) {\n      setIFrameSize(entry.contentRect)\n    }\n  }\n})\n\nconst emitError = (error: unknown) => {\n  loaderContainer.value!.classList.toggle('fading', true)\n  emit('error', {\n    error: error instanceof Error ? error : new Error('Non-error error', { cause: error }),\n    hint: t(\n      appName,\n      `Unable to access the contents of the wrapped {wrappedApp} instance.\nThis may be caused by cross-domain access restrictions.\nPlease check that your Nextcloud instance ({nextcloudUrl}) and the wrapped {wrappedApp} instance ({iFrameUrl}) are served from the same domain.`,\n      {\n        wrappedApp,\n        nextcloudUrl: window.location.protocol + '//' + window.location.host,\n        iFrameUrl: initialState?.wikiURL || '',\n      },\n    ),\n  })\n}\n\nconst loadHandler = () => {\n  logger.debug('GOT LOAD EVENT')\n  const iFrame = externalFrame.value\n  const iFrameWindow = iFrame?.contentWindow\n  if (!iFrame || !iFrameWindow) {\n    return\n  }\n  loading.value = true // if not already set ...\n  let iFrameDocument: Document|null\n  try {\n    iFrameDocument = iFrame.contentDocument\n    tuneContents(iFrame)\n  } catch (error: unknown) {\n    logger.error('UNABLE TO ACCESS IFRAME CONTENTS', { error })\n    emitError(error)\n    return\n  }\n  if (!props.fullScreen) {\n    removeEnvelope(iFrame)\n  } else {\n    setIFrameSize(container.value!.getBoundingClientRect())\n  }\n  iFrameBody = iFrameDocument?.body as undefined|HTMLBodyElement\n  logger.debug('IFRAME BODY', { iFrameBody })\n  if (iFrameBody) {\n    resizeObserver.observe(iFrameBody)\n  }\n  loaderContainer.value!.classList.toggle('fading', true)\n  logger.debug('IFRAME IS NOW', {\n    iFrame,\n    location: iFrameWindow.location,\n  })\n  currentLocation.value = iFrameWindow.location.href\n  const search = iFrameWindow.location.search\n  const urlPath = iFrameWindow.location.pathname.replace(/^.*doku\\.php\\/?/, '')\n  const query = Object.fromEntries((new URLSearchParams(search)).entries())\n  const wikiPath: string[] = []\n  if (query.id) {\n    wikiPath.splice(0, 0, ...(query.id.split(/:/)))\n  } else {\n    wikiPath.splice(0, 0, ...(urlPath.split(/[:/]/)))\n  }\n  // no rewrite: doku.php?id=A:B:C\n  // rewrite: doku.php/A:B:C\n  // rewrite + useslash: doku.php/A/B/C\n  //\n  // In all cases the id=A:B:C is understood.\n  emit('iframe-loaded', {\n    wikiPath,\n    urlPath,\n    query,\n    iFrame,\n    window: iFrameWindow,\n    document: iFrameDocument!,\n  })\n  loading.value = false\n}\n\nconst loadTimerHandler = () => {\n  loadTimer = undefined\n  if (!loading.value) {\n    return\n  }\n  timerCount++\n  try {\n    const iFrameContents = externalFrame.value!.contentWindow!.document\n    if (iFrameContents.querySelector('#layout')) {\n      logger.debug('LOAD EVENT FROM TIMER AFTER ' + (loadTimeout * timerCount) + ' ms')\n      externalFrame.value!.dispatchEvent(new Event('load'))\n    } else {\n      loadTimer = setTimeout(loadTimerHandler, loadTimeout)\n    }\n  } catch (error: unknown) {\n    logger.error('UNABLE TO ACCESS IFRAME CONTENTS', { error })\n    emitError(error)\n  }\n}\n\nonBeforeMount(() => {\n  loading.value = true\n  iFrameLocation.value = requestedLocation.value\n})\n\nwatch(() => props.fullScreen, (value) => {\n  if (!value) {\n    removeEnvelope(externalFrame.value || undefined)\n  } else {\n    // if this mutation really happens we trigger an iframe reload by\n    // touching its src attribute\n    const iFrame = externalFrame.value\n    if (iFrame) {\n      if (iFrameLocation.value !== requestedLocation.value) {\n        iFrameLocation.value = requestedLocation.value\n      } else if (iFrame.contentWindow) {\n        iFrame.contentWindow.location.href = requestedLocation.value\n      }\n    }\n  }\n})\n\nonMounted(() => {\n  if (!loadTimer) {\n    loadTimer = setTimeout(loadTimerHandler, loadTimeout)\n  }\n  resizeObserver.observe(container.value!)\n})\n\nonBeforeUnmount(() => {\n  resizeObserver.disconnect()\n})\n\ndefineExpose({\n  currentLocation,\n  wikiIFrame: externalFrame,\n})\n\n</script>\n<style scoped lang=\"scss\">\n.#{$dokuWikiAppName}-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: stretch;\n  align-content: stretch;\n  height: 100%;\n  .loader-container {\n    background-image: url('../img/loader.gif');\n    background-repeat: no-repeat;\n    background-position: center;\n    z-index:10;\n    width:100%;\n    height:100%;\n    position:absolute;\n    transition: visibility 1s, opacity 1s;\n    &.fading {\n      opacity: 0;\n      visibility: hidden;\n    }\n  }\n  * {\n    flex-grow: 10;\n    max-width: 100%;\n    max-height: 100%;\n  }\n}\n</style>\n","import { render, staticRenderFns } from \"./DokuWikiWrapper.vue?vue&type=template&id=0fb51c06&scoped=true\"\nimport script from \"./DokuWikiWrapper.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./DokuWikiWrapper.vue?vue&type=script&setup=true&lang=ts\"\nimport style0 from \"./DokuWikiWrapper.vue?vue&type=style&index=0&id=0fb51c06&prod&scoped=true&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0fb51c06\",\n  null\n  \n)\n\nexport default component.exports"],"names":["async","title","text","_ref","getDialogBuilder","setText","setSeverity","DialogSeverity","Info","addButton","label","t","type","callback","build","show","removeEnvelope","frame","frameDocument","contentWindow","document","querySelectorAll","forEach","el","remove","style","padding","section","defaults","arguments","length","undefined","loadState","appName","err","console","error","_defineComponent","__name","props","fullScreen","Boolean","default","iFrameAttributes","query","wikiPage","emits","setup","__props","expose","emit","wrappedApp","logger","Console","initialState","getInitialState","loading","ref","watch","value","requestedLocation","computed","queryString","URLSearchParams","id","toString","replace","wikiURL","iFrameLocation","currentLocation","frameId","debug","request","current","loadTimeout","loadTimer","timerCount","container","loaderContainer","frameWrapper","externalFrame","iFrameBody","setIFrameSize","_ref2","width","height","iFrame","resizeObserver","ResizeObserver","entries","entry","target","contentRect","emitError","classList","toggle","Error","cause","hint","nextcloudUrl","window","location","protocol","host","iFrameUrl","loadTimerHandler","querySelector","dispatchEvent","Event","setTimeout","onBeforeMount","href","onMounted","observe","onBeforeUnmount","disconnect","wikiIFrame","__sfc","loadHandler","iFrameWindow","iFrameDocument","contentDocument","hostname","setAttribute","previewDiv","addEventListener","event","stopPropagation","preventDefault","getAttribute","dialogAlert","tuneContents","getBoundingClientRect","body","search","urlPath","pathname","Object","fromEntries","wikiPath","splice","split","_vm","this","_c","_self","_setup","_setupProxy","class","staticClass","_v","_b","attrs","on"],"sourceRoot":""}